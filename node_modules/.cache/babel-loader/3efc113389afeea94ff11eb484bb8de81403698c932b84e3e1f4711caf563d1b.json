{"ast":null,"code":"var _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from \"react\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [numbers, setNumbers] = useState([10, 20, 30, 40, 50]);\n  function calculateAverage() {\n    // TODO: Implement a method to calculate the average of all numbers in the array\n\n    let sum = numbers.map(num => sum += num);\n    return sum / numbers.length;\n  }\n  // Method to find the median of the array\n  function findMedian() {\n    // TODO: Implement a method to find the median of the array\n  }\n  // Method to find the mode of the array\n  function findMode() {\n    // TODO: Implement a method to find the mode of the array\n  }\n  // Method to raise each number to the power of 3\n  function powerOfThree() {\n    // TODO: Implement a method to raise each number to the power of 3\n  }\n  // Method to calculate the factorial of each number in the array\n  function calculateFactorials() {\n    // TODO: Implement a method to calculate the factorial of each number in the array\n  }\n  // Method to demonstrate asynchronous operation using promises\n  function asyncOperation() {\n    // TODO: Implement an asynchronous operation using promises\n  }\n  // Method to demonstrate type coercion\n  function typeCoercionDemo() {\n    // TODO: Implement a demonstration of type coercion\n  }\n  useEffect(() => {\n    console.log(calculateAverage());\n  }, [numbers]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(App, \"iaPfQScs0Mno2zHJH1yAWHwLGs4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","App","_s","numbers","setNumbers","calculateAverage","sum","map","num","length","findMedian","findMode","powerOfThree","calculateFactorials","asyncOperation","typeCoercionDemo","console","log","_c","$RefreshReg$"],"sources":["/home/hassanwaqar/Github/React-Tasks/src/App.js"],"sourcesContent":["import './App.css';\nimport {useEffect, useState} from \"react\";\n\nfunction App() {\n  const [numbers, setNumbers] = useState([10, 20, 30, 40, 50])\n\n  function calculateAverage() {\n    // TODO: Implement a method to calculate the average of all numbers in the array\n\n    let sum = numbers.map((num) => sum += num)\n    return sum/numbers.length\n  }\n  // Method to find the median of the array\n  function findMedian() {\n    // TODO: Implement a method to find the median of the array\n  }\n  // Method to find the mode of the array\n  function findMode() {\n    // TODO: Implement a method to find the mode of the array\n  }\n  // Method to raise each number to the power of 3\n  function powerOfThree() {\n    // TODO: Implement a method to raise each number to the power of 3\n  }\n  // Method to calculate the factorial of each number in the array\n  function calculateFactorials() {\n    // TODO: Implement a method to calculate the factorial of each number in the array\n  }\n  // Method to demonstrate asynchronous operation using promises\n  function asyncOperation() {\n    // TODO: Implement an asynchronous operation using promises\n  }\n  // Method to demonstrate type coercion\n  function typeCoercionDemo() {\n    // TODO: Implement a demonstration of type coercion\n  }\n\n  useEffect(() => {\n    console.log(calculateAverage())\n\n  }, [numbers]);\n\n  return (\n    <>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EAE5D,SAASS,gBAAgBA,CAAA,EAAG;IAC1B;;IAEA,IAAIC,GAAG,GAAGH,OAAO,CAACI,GAAG,CAAEC,GAAG,IAAKF,GAAG,IAAIE,GAAG,CAAC;IAC1C,OAAOF,GAAG,GAACH,OAAO,CAACM,MAAM;EAC3B;EACA;EACA,SAASC,UAAUA,CAAA,EAAG;IACpB;EAAA;EAEF;EACA,SAASC,QAAQA,CAAA,EAAG;IAClB;EAAA;EAEF;EACA,SAASC,YAAYA,CAAA,EAAG;IACtB;EAAA;EAEF;EACA,SAASC,mBAAmBA,CAAA,EAAG;IAC7B;EAAA;EAEF;EACA,SAASC,cAAcA,CAAA,EAAG;IACxB;EAAA;EAEF;EACA,SAASC,gBAAgBA,CAAA,EAAG;IAC1B;EAAA;EAGFpB,SAAS,CAAC,MAAM;IACdqB,OAAO,CAACC,GAAG,CAACZ,gBAAgB,CAAC,CAAC,CAAC;EAEjC,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEb,oBACEH,OAAA,CAAAF,SAAA,mBACE,CAAC;AAEP;AAACI,EAAA,CA3CQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}