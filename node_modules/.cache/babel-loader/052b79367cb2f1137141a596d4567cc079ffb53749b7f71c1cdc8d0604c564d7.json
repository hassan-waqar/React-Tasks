{"ast":null,"code":"var _jsxFileName = \"/home/hassanwaqar/Github/React-Tasks/src/pages/ToDoList.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Container, TextField, Autocomplete, Button } from \"@mui/material\";\nimport AddToList from \"./AddToList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const [rows, setRows] = useState([{\n    id: 1,\n    itemName: 'Item 1',\n    priority: 'High',\n    status: 'Pending'\n  }, {\n    id: 2,\n    itemName: 'Item 2',\n    priority: 'Medium',\n    status: 'In Progress'\n  }, {\n    id: 3,\n    itemName: 'Item 3',\n    priority: 'Low',\n    status: 'Completed'\n  }]);\n\n  // Define columns\n  const columns = [{\n    field: 'id',\n    headerName: 'Item Number',\n    width: 150\n  }, {\n    field: 'itemName',\n    headerName: 'Item Name',\n    width: 150\n  }, {\n    field: 'priority',\n    headerName: 'Priority',\n    width: 150\n  }, {\n    field: 'status',\n    headerName: 'Status',\n    width: 150\n  }, {\n    field: 'delete',\n    headerName: 'Delete',\n    sortable: false,\n    width: 100,\n    renderCell: params => /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: () => handleDeleteRow(params.row.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)\n  }, {\n    field: 'edit',\n    headerName: 'Edit',\n    sortable: false,\n    width: 100,\n    renderCell: params => /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: () => handleEditRow(params.row.id),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)\n  }];\n  const handleDeleteRow = id => {\n    setRows(prevRows => prevRows.filter(row => row.id !== id));\n  };\n\n  // const [editItem, editItem] = useState({\n  //     itemName: '',\n  //     priority: '',\n  //     status: ''\n  // });\n\n  const handleEditRow = id => {\n    const rowToEdit = rows.find(row => row.id === id);\n    console.log(rowToEdit);\n  };\n  const addToList = newItem => {\n    setRows(prevRows => [...prevRows, {\n      id: prevRows.length + 1,\n      itemName: newItem.itemName,\n      priority: newItem.priority,\n      status: newItem.status\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 5,\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        height: '30px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddToList, {\n      addToList: addToList,\n      handleEditRow: handleEditRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ToDoList, \"YQzLZ0vrWN7WS+FNqv/W1dtjXeY=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["useState","DataGrid","Container","TextField","Autocomplete","Button","AddToList","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDoList","_s","rows","setRows","id","itemName","priority","status","columns","field","headerName","width","sortable","renderCell","params","variant","onClick","handleDeleteRow","row","children","fileName","_jsxFileName","lineNumber","columnNumber","handleEditRow","prevRows","filter","rowToEdit","find","console","log","addToList","newItem","length","pageSize","checkboxSelection","style","height","_c","$RefreshReg$"],"sources":["/home/hassanwaqar/Github/React-Tasks/src/pages/ToDoList.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Container, TextField, Autocomplete, Button } from \"@mui/material\";\nimport AddToList from \"./AddToList\"\n\nfunction ToDoList() {\n    const [rows, setRows] = useState([\n        { id: 1, itemName: 'Item 1', priority: 'High', status: 'Pending' },\n        { id: 2, itemName: 'Item 2', priority: 'Medium', status: 'In Progress' },\n        { id: 3, itemName: 'Item 3', priority: 'Low', status: 'Completed' },\n\n    ]);\n\n    // Define columns\n    const columns = [\n        { field: 'id', headerName: 'Item Number', width: 150 },\n        { field: 'itemName', headerName: 'Item Name', width: 150 },\n        { field: 'priority', headerName: 'Priority', width: 150 },\n        { field: 'status', headerName: 'Status', width: 150 },\n        {\n            field: 'delete',\n            headerName: 'Delete',\n            sortable: false,\n            width: 100,\n            renderCell: (params) => (\n                <Button\n                    variant=\"outlined\"\n                    onClick={() => handleDeleteRow(params.row.id)}\n                >\n                    Delete\n                </Button>\n            )\n        },\n        {\n            field: 'edit',\n            headerName: 'Edit',\n            sortable: false,\n            width: 100,\n            renderCell: (params) => (\n                <Button\n                    variant=\"outlined\"\n                    onClick={() => handleEditRow(params.row.id)}\n                >\n                    Edit\n                </Button>\n            )\n        }\n    ];\n\n    const handleDeleteRow = (id) => {\n        setRows(prevRows => prevRows.filter(row => row.id !== id));\n    };\n\n\n    // const [editItem, editItem] = useState({\n    //     itemName: '',\n    //     priority: '',\n    //     status: ''\n    // });\n\n    const handleEditRow = (id) => {\n        const rowToEdit = rows.find(row => row.id === id);\n        console.log(rowToEdit)\n    }\n\n\n\n    const addToList = (newItem) => {\n        setRows(prevRows => [\n            ...prevRows,\n            {\n                id: prevRows.length + 1,\n                itemName: newItem.itemName,\n                priority: newItem.priority,\n                status: newItem.status\n            }\n        ]);\n    };\n\n    return (\n        <>\n            <DataGrid\n                rows={rows}\n                columns={columns}\n                pageSize={5}\n                checkboxSelection\n            />\n            <Container style={{ height: '30px' }} />\n            <AddToList addToList={addToList} handleEditRow={handleEditRow}/>\n\n        </>\n    )\n}\n\nexport default ToDoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}