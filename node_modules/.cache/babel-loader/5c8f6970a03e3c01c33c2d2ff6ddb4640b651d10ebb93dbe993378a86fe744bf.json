{"ast":null,"code":"var _jsxFileName = \"/home/hassanwaqar/Github/React-Tasks/src/pages/ToDoList.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const [selectedRows, setSelectedRows] = useState([]);\n  const rows = [{\n    id: 1,\n    itemName: 'Item 1',\n    priority: 'High',\n    status: 'Pending'\n  }, {\n    id: 2,\n    itemName: 'Item 2',\n    priority: 'Medium',\n    status: 'In Progress'\n  }, {\n    id: 3,\n    itemName: 'Item 3',\n    priority: 'Low',\n    status: 'Completed'\n  }\n  // Add more rows as needed\n  ];\n  const columns = [{\n    field: 'id',\n    headerName: 'Item Number',\n    width: 150\n  }, {\n    field: 'itemName',\n    headerName: 'Item Name',\n    width: 150\n  }, {\n    field: 'priority',\n    headerName: 'Priority',\n    width: 150\n  }, {\n    field: 'status',\n    headerName: 'Status',\n    width: 150\n  }];\n  const handleSelectionChange = selection => {\n    console.log(\"selection : \" + selection);\n    setSelectedRows(selection.selectionModel);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      onSelectionModelChange: handleSelectionChange,\n      pageSize: 5,\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Selected Rows: \", selectedRows.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ToDoList, \"kE+zebKPJPLpKtm4LqE61mD+8P8=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["useState","DataGrid","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDoList","_s","selectedRows","setSelectedRows","rows","id","itemName","priority","status","columns","field","headerName","width","handleSelectionChange","selection","console","log","selectionModel","children","onSelectionModelChange","pageSize","checkboxSelection","fileName","_jsxFileName","lineNumber","columnNumber","join","_c","$RefreshReg$"],"sources":["/home/hassanwaqar/Github/React-Tasks/src/pages/ToDoList.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\n\nfunction ToDoList() {\n    const [selectedRows, setSelectedRows] = useState([]);\n\n    const rows = [\n        { id: 1, itemName: 'Item 1', priority: 'High', status: 'Pending' },\n        { id: 2, itemName: 'Item 2', priority: 'Medium', status: 'In Progress' },\n        { id: 3, itemName: 'Item 3', priority: 'Low', status: 'Completed' }\n        // Add more rows as needed\n    ];\n\n    const columns = [\n        { field: 'id', headerName: 'Item Number', width: 150 },\n        { field: 'itemName', headerName: 'Item Name', width: 150 },\n        { field: 'priority', headerName: 'Priority', width: 150 },\n        { field: 'status', headerName: 'Status', width: 150 }\n    ];\n\n    const handleSelectionChange = (selection) => {\n        console.log(\"selection : \" + selection)\n        setSelectedRows(selection.selectionModel);\n    };\n\n    return (\n        <>\n            <DataGrid\n                rows={rows}\n                columns={columns}\n                onSelectionModelChange={handleSelectionChange}\n                pageSize={5}\n                checkboxSelection\n            />\n            <div>\n                Selected Rows: {selectedRows.join(', ')}\n            </div>\n        </>\n    );\n}\n\nexport default ToDoList;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMU,IAAI,GAAG,CACT;IAAEC,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAE,QAAQ;IAAEC,QAAQ,EAAE,MAAM;IAAEC,MAAM,EAAE;EAAU,CAAC,EAClE;IAAEH,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAE,QAAQ;IAAEC,QAAQ,EAAE,QAAQ;IAAEC,MAAM,EAAE;EAAc,CAAC,EACxE;IAAEH,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAE,QAAQ;IAAEC,QAAQ,EAAE,KAAK;IAAEC,MAAM,EAAE;EAAY;EAClE;EAAA,CACH;EAED,MAAMC,OAAO,GAAG,CACZ;IAAEC,KAAK,EAAE,IAAI;IAAEC,UAAU,EAAE,aAAa;IAAEC,KAAK,EAAE;EAAI,CAAC,EACtD;IAAEF,KAAK,EAAE,UAAU;IAAEC,UAAU,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC1D;IAAEF,KAAK,EAAE,UAAU;IAAEC,UAAU,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAI,CAAC,EACzD;IAAEF,KAAK,EAAE,QAAQ;IAAEC,UAAU,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAI,CAAC,CACxD;EAED,MAAMC,qBAAqB,GAAIC,SAAS,IAAK;IACzCC,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGF,SAAS,CAAC;IACvCX,eAAe,CAACW,SAAS,CAACG,cAAc,CAAC;EAC7C,CAAC;EAED,oBACIpB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACIrB,OAAA,CAACF,QAAQ;MACLS,IAAI,EAAEA,IAAK;MACXK,OAAO,EAAEA,OAAQ;MACjBU,sBAAsB,EAAEN,qBAAsB;MAC9CO,QAAQ,EAAE,CAAE;MACZC,iBAAiB;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACF5B,OAAA;MAAAqB,QAAA,GAAK,iBACc,EAAChB,YAAY,CAACwB,IAAI,CAAC,IAAI,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA,eACR,CAAC;AAEX;AAACxB,EAAA,CApCQD,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAsCjB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}