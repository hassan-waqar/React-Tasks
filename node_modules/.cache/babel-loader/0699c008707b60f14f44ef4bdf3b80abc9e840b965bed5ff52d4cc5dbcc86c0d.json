{"ast":null,"code":"var _jsxFileName = \"/home/hassanwaqar/Github/React-Tasks/src/pages/ToDoList.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Container, TextField, Autocomplete, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const [rows, setRows] = useState([{\n    id: 1,\n    itemName: 'Item 1',\n    priority: 'High',\n    status: 'Pending'\n  }, {\n    id: 2,\n    itemName: 'Item 2',\n    priority: 'Medium',\n    status: 'In Progress'\n  }, {\n    id: 3,\n    itemName: 'Item 3',\n    priority: 'Low',\n    status: 'Completed'\n  }\n  // Add more rows as needed\n  ]);\n\n  // Define columns\n  const columns = [{\n    field: 'id',\n    headerName: 'Item Number',\n    width: 150\n  }, {\n    field: 'itemName',\n    headerName: 'Item Name',\n    width: 150\n  }, {\n    field: 'priority',\n    headerName: 'Priority',\n    width: 150\n  }, {\n    field: 'status',\n    headerName: 'Status',\n    width: 150\n  }];\n  const priority = [\"High\", \"Medium\", \"Low\"];\n  const status = [\"Pending\", \"In Progress\", \"Complete\"];\n  const [newItem, setNewItem] = useState({\n    itemName: '',\n    priority: '',\n    status: ''\n  });\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setNewItem(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const addToList = () => {\n    setRows(prevRows => [...prevRows, {\n      id: prevRows.length + 1,\n      itemName: newItem.itemName,\n      priority: newItem.priority,\n      status: newItem.status\n    }]);\n    setNewItem({\n      itemName: '',\n      priority: '',\n      status: ''\n    });\n  };\n  const removeFromList = id => {\n    setRows(prevRows => prevRows.filter(item => item.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 5,\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      style: {\n        textAlign: \"center\",\n        display: \"flex\",\n        justifyContent: \"space-around\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"itemName\",\n        name: \"itemName\",\n        label: \"Item Name\",\n        variant: \"outlined\",\n        value: newItem.itemName,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        disablePortal: true,\n        id: \"combo-box-priority\",\n        options: priority,\n        sx: {\n          width: 300\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params,\n          label: \"Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 46\n        }, this),\n        value: newItem.priority,\n        onChange: (event, newValue) => {\n          setNewItem(prevState => ({\n            ...prevState,\n            priority: newValue\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        disablePortal: true,\n        id: \"combo-box-status\",\n        options: status,\n        sx: {\n          width: 300\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params,\n          label: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 46\n        }, this),\n        value: newItem.status,\n        onChange: (event, newValue) => {\n          setNewItem(prevState => ({\n            ...prevState,\n            status: newValue\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: addToList,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => removeFromList(newItem.id),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ToDoList, \"8IbpcuodtD2rID9vpFuY466mq5M=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["useState","DataGrid","Container","TextField","Autocomplete","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDoList","_s","rows","setRows","id","itemName","priority","status","columns","field","headerName","width","newItem","setNewItem","handleInputChange","event","name","value","target","prevState","addToList","prevRows","length","removeFromList","filter","item","children","pageSize","checkboxSelection","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","style","textAlign","display","justifyContent","label","variant","onChange","disablePortal","options","sx","renderInput","params","newValue","onClick","_c","$RefreshReg$"],"sources":["/home/hassanwaqar/Github/React-Tasks/src/pages/ToDoList.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Container, TextField, Autocomplete, Button } from \"@mui/material\";\n\nfunction ToDoList() {\n    const [rows, setRows] = useState([\n        { id: 1, itemName: 'Item 1', priority: 'High', status: 'Pending' },\n        { id: 2, itemName: 'Item 2', priority: 'Medium', status: 'In Progress' },\n        { id: 3, itemName: 'Item 3', priority: 'Low', status: 'Completed' }\n        // Add more rows as needed\n    ]);\n\n    // Define columns\n    const columns = [\n        { field: 'id', headerName: 'Item Number', width: 150 },\n        { field: 'itemName', headerName: 'Item Name', width: 150 },\n        { field: 'priority', headerName: 'Priority', width: 150 },\n        { field: 'status', headerName: 'Status', width: 150 }\n    ];\n\n    const priority = [\"High\", \"Medium\", \"Low\"]\n    const status = [\"Pending\", \"In Progress\", \"Complete\"]\n\n    const [newItem, setNewItem] = useState({\n        itemName: '',\n        priority: '',\n        status: ''\n    });\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setNewItem(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    };\n\n    const addToList = () => {\n        setRows(prevRows => [\n            ...prevRows,\n            {\n                id: prevRows.length + 1,\n                itemName: newItem.itemName,\n                priority: newItem.priority,\n                status: newItem.status\n            }\n        ]);\n        setNewItem({ itemName: '', priority: '', status: '' });\n    };\n\n    const removeFromList = (id) => {\n        setRows(prevRows => prevRows.filter(item => item.id !== id));\n    };\n\n    return (\n        <>\n            <DataGrid\n                rows={rows}\n                columns={columns}\n                pageSize={5}\n                checkboxSelection\n            />\n            <Container maxWidth=\"md\" style={{ textAlign: \"center\", display: \"flex\", justifyContent: \"space-around\" }}>\n                <TextField\n                    id=\"itemName\"\n                    name=\"itemName\"\n                    label=\"Item Name\"\n                    variant=\"outlined\"\n                    value={newItem.itemName}\n                    onChange={handleInputChange}\n                />\n                <Autocomplete\n                    disablePortal\n                    id=\"combo-box-priority\"\n                    options={priority}\n                    sx={{ width: 300 }}\n                    renderInput={(params) => <TextField {...params} label=\"Priority\" />}\n                    value={newItem.priority}\n                    onChange={(event, newValue) => {\n                        setNewItem(prevState => ({ ...prevState, priority: newValue }));\n                    }}\n                />\n                <Autocomplete\n                    disablePortal\n                    id=\"combo-box-status\"\n                    options={status}\n                    sx={{ width: 300 }}\n                    renderInput={(params) => <TextField {...params} label=\"Status\" />}\n                    value={newItem.status}\n                    onChange={(event, newValue) => {\n                        setNewItem(prevState => ({ ...prevState, status: newValue }));\n                    }}\n                />\n                <Button variant=\"outlined\" onClick={addToList}>Add</Button>\n                <Button variant=\"outlined\" onClick={() => removeFromList(newItem.id)}>Remove</Button> {/* Assuming newItem.id is the id of the item to be removed */}\n            </Container>\n        </>\n    )\n}\n\nexport default ToDoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}