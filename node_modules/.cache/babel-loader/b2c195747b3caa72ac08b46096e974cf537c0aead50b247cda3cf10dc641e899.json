{"ast":null,"code":"var _jsxFileName = \"/home/hassanwaqar/Github/React-Tasks/src/features/todos/TodoList.js\",\n  _s = $RefreshSig$();\nimport { useGetTodosQuery, useUpdateTodoMutation, useDeleteTodoMutation, useAddTodoMutation } from \"../api/apiSlice\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [newTodo, setNewTodo] = useState('');\n  const {\n    data: todos,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetTodosQuery();\n  const [addTodo] = useAddTodoMutation();\n  const [updateTodo] = useUpdateTodoMutation();\n  const [deleteTodo] = useDeleteTodoMutation();\n  const handleSubmit = e => {\n    e.preventDefault();\n    addTodo({\n      userId: 1,\n      title: newTodo,\n      completed: false\n    });\n    setNewTodo('');\n  };\n  const newItemSection = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"new-todo\",\n      children: \"Enter a new todo item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-todo\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"new-todo\",\n        value: newTodo,\n        onChange: e => setNewTodo(e.target.value),\n        placeholder: \"Enter new todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n  let content;\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this);\n  } else if (isSuccess) {\n    content = todos.map(todo => {\n      //JSON.stringify(todos)\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: todo.completed,\n            id: todo.id,\n            onChange: () => updateTodo({\n              ...todo,\n              completed: !todo.completed\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: todo.id,\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"trash\",\n          onClick: () => deleteTodo({\n            id: todo.id\n          }),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this);\n    });\n  } else if (isError) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), newItemSection, content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoList, \"5Rn1bSAPZkT+lNlmFfyi0GzujRU=\", false, function () {\n  return [useGetTodosQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useGetTodosQuery","useUpdateTodoMutation","useDeleteTodoMutation","useAddTodoMutation","FontAwesomeIcon","faTrash","faUpload","useState","jsxDEV","_jsxDEV","TodoList","_s","newTodo","setNewTodo","data","todos","isLoading","isSuccess","isError","error","addTodo","updateTodo","deleteTodo","handleSubmit","e","preventDefault","userId","title","completed","newItemSection","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","className","type","id","value","onChange","target","placeholder","icon","content","map","todo","checked","onClick","_c","$RefreshReg$"],"sources":["/home/hassanwaqar/Github/React-Tasks/src/features/todos/TodoList.js"],"sourcesContent":["import {\n    useGetTodosQuery,\n    useUpdateTodoMutation,\n    useDeleteTodoMutation,\n    useAddTodoMutation\n} from \"../api/apiSlice\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faUpload } from '@fortawesome/free-solid-svg-icons'\nimport { useState } from \"react\"\n\nconst TodoList = () => {\n    const [newTodo, setNewTodo] = useState('')\n\n    const {\n        data: todos,\n        isLoading,\n        isSuccess,\n        isError,\n        error\n    } = useGetTodosQuery()\n    const [addTodo] = useAddTodoMutation()\n    const [updateTodo] = useUpdateTodoMutation()\n    const [deleteTodo] = useDeleteTodoMutation()\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        addTodo({ userId: 1, title: newTodo, completed: false })\n        setNewTodo('')\n    }\n\n    const newItemSection =\n        <form onSubmit={handleSubmit}>\n            <label htmlFor=\"new-todo\">Enter a new todo item</label>\n            <div className=\"new-todo\">\n                <input\n                    type=\"text\"\n                    id=\"new-todo\"\n                    value={newTodo}\n                    onChange={(e) => setNewTodo(e.target.value)}\n                    placeholder=\"Enter new todo\"\n                />\n            </div>\n            <button className=\"submit\">\n                <FontAwesomeIcon icon={faUpload} />\n            </button>\n        </form>\n\n\n    let content;\n    if (isLoading) {\n        content = <p>Loading...</p>\n    } else if (isSuccess) {\n        content = todos.map(todo => { //JSON.stringify(todos)\n            return (\n                <article key={todo.id}>\n                    <div className=\"todo\">\n                        <input\n                            type=\"checkbox\"\n                            checked={todo.completed}\n                            id={todo.id}\n                            onChange={() => updateTodo({ ...todo, completed: !todo.completed })}\n                        />\n                        <label htmlFor={todo.id}>{todo.title}</label>\n                    </div>\n                    <button className=\"trash\" onClick={() => deleteTodo({ id: todo.id })}>\n                        <FontAwesomeIcon icon={faTrash} />\n                    </button>\n                </article>\n            )\n        })\n    } else if (isError) {\n        content = <p>{error}</p>\n    }\n\n    return (\n        <main>\n            <h1>Todo List</h1>\n            {newItemSection}\n            {content}\n        </main>\n    )\n}\nexport default TodoList"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}