{"ast":null,"code":"var _jsxFileName = \"/home/hassanwaqar/Github/React-Tasks/src/Form.js\",\n  _s = $RefreshSig$();\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    },\n    onSubmit: values => {\n      console.log(values);\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string().required(\"First Name is required\"),\n      lastName: Yup.string().required(\"Last Name is required\"),\n      email: Yup.string().email(\"Invalid email address\").required(\"Email is required\")\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"firstName\",\n      name: \"firstName\",\n      type: \"text\",\n      placeholder: \"First Name\",\n      value: formik.values.firstName,\n      onChange: formik.handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), formik.touched.firstName && formik.errors.firstName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"lastName\",\n      name: \"lastName\",\n      type: \"text\",\n      placeholder: \"Last Name\",\n      value: formik.values.lastName,\n      onChange: formik.handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), formik.touched.lastName && formik.errors.lastName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      value: formik.values.email,\n      onChange: formik.handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useFormik","Yup","jsxDEV","_jsxDEV","Form","_s","formik","initialValues","firstName","lastName","email","onSubmit","values","console","log","validationSchema","object","string","required","handleSubmit","style","display","flexDirection","children","id","name","type","placeholder","value","onChange","handleChange","fileName","_jsxFileName","lineNumber","columnNumber","touched","errors","_c","$RefreshReg$"],"sources":["/home/hassanwaqar/Github/React-Tasks/src/Form.js"],"sourcesContent":["import { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nexport default function Form() {\n    const formik = useFormik({\n        initialValues: {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\"\n        },\n\n        onSubmit: (values) => {\n            console.log(values);\n        },\n\n        validationSchema: Yup.object({\n            firstName: Yup.string().required(\"First Name is required\"),\n            lastName: Yup.string().required(\"Last Name is required\"),\n            email: Yup.string().email(\"Invalid email address\").required(\"Email is required\")\n        })\n    });\n\n    return (\n        <form onSubmit={formik.handleSubmit} style={{display: \"flex\", flexDirection: \"column\"}}>\n            <input\n                id=\"firstName\"\n                name=\"firstName\"\n                type=\"text\"\n                placeholder=\"First Name\"\n                value={formik.values.firstName}\n                onChange={formik.handleChange}\n            />\n            {formik.touched.firstName && formik.errors.firstName ? (\n                <div>{formik.errors.firstName}</div>\n            ) : null}\n\n            <input\n                id=\"lastName\"\n                name=\"lastName\"\n                type=\"text\"\n                placeholder=\"Last Name\"\n                value={formik.values.lastName}\n                onChange={formik.handleChange}\n            />\n            {formik.touched.lastName && formik.errors.lastName ? (\n                <div>{formik.errors.lastName}</div>\n            ) : null}\n\n            <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n            />\n            {formik.touched.email && formik.errors.email ? (\n                <div>{formik.errors.email}</div>\n            ) : null}\n\n            <button type=\"submit\">Submit</button>\n        </form>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}