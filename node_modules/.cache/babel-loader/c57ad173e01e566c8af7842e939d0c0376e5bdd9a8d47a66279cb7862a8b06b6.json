{"ast":null,"code":"var _jsxFileName = \"/home/hassanwaqar/Github/React-Tasks/src/pages/AddToList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Container, TextField, Autocomplete, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddToList({\n  addToList\n}) {\n  _s();\n  const itemNameRef = useRef(null);\n  const priorityRef = useRef(null);\n  const statusRef = useRef(null);\n  const [priorityOptions] = useState([\"High\", \"Medium\", \"Low\"]);\n  const [statusOptions] = useState([\"Pending\", \"In Progress\", \"Complete\"]);\n  const handleAddToList = () => {\n    const newItem = {\n      itemName: itemNameRef.current.value,\n      priority: priorityRef.current,\n      status: statusRef.current\n    };\n    addToList(newItem);\n    // Clear input fields after adding item\n    itemNameRef.current.value = '';\n    priorityRef.current = null; // Reset the reference\n    statusRef.current = null; // Reset the reference\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    style: {\n      textAlign: \"center\",\n      display: \"flex\",\n      justifyContent: \"space-around\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      inputRef: itemNameRef,\n      id: \"itemName\",\n      name: \"itemName\",\n      label: \"Item Name\",\n      variant: \"outlined\",\n      style: {\n        marginRight: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      disablePortal: true,\n      id: \"combo-box-priority\",\n      options: priorityOptions,\n      sx: {\n        width: 300\n      },\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n        ...params,\n        label: \"Priority\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 42\n      }, this),\n      onChange: (event, newValue) => {\n        priorityRef.current = newValue;\n      },\n      style: {\n        marginRight: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      disablePortal: true,\n      id: \"combo-box-status\",\n      options: statusOptions,\n      sx: {\n        width: 300\n      },\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n        ...params,\n        label: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 42\n      }, this),\n      onChange: (event, newValue) => {\n        statusRef.current = newValue;\n      },\n      style: {\n        marginRight: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleAddToList,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(AddToList, \"pvOhXWXDrU4/PyxQXVs6Ea2jmMc=\");\n_c = AddToList;\nexport default AddToList;\n\n// import React, { useState, useRef, useReducer } from 'react';\n// import { Container, TextField, Autocomplete, Button } from \"@mui/material\";\n//\n// const initialState = {\n//     itemName: '',\n//     priority: null,\n//     status: null\n// };\n//\n// function reducer(state, action) {\n//     switch (action.type) {\n//         case 'SET_ITEM_NAME':\n//             return { ...state, itemName: action.payload };\n//         case 'SET_PRIORITY':\n//             return { ...state, priority: action.payload };\n//         case 'SET_STATUS':\n//             return { ...state, status: action.payload };\n//         case 'RESET':\n//             return initialState;\n//         default:\n//             return state;\n//     }\n// }\n//\n// function AddToList({ addToList }) {\n//     const [state, dispatch] = useReducer(reducer, initialState);\n//\n//     const itemNameRef = useRef(null);\n//     const priorityRef = useRef(null);\n//     const statusRef = useRef(null);\n//\n//     const priorityOptions = [\"High\", \"Medium\", \"Low\"];\n//     const statusOptions = [\"Pending\", \"In Progress\", \"Complete\"];\n//\n//     const handleAddToList = () => {\n//         const newItem = {\n//             itemName: itemNameRef.current.value,\n//             priority: state.priority,\n//             status: state.status\n//         };\n//         addToList(newItem);\n//         dispatch({ type: 'RESET' });\n//     };\n//\n//     return (\n//         <Container maxWidth=\"sm\" style={{ textAlign: \"center\", display: \"flex\", justifyContent: \"space-around\" }}>\n//             <TextField\n//                 inputRef={itemNameRef}\n//                 id=\"itemName\"\n//                 name=\"itemName\"\n//                 label=\"Item Name\"\n//                 variant=\"outlined\"\n//                 style={{ marginRight: '10px' }}\n//                 value={state.itemName}\n//                 onChange={(e) => dispatch({ type: 'SET_ITEM_NAME', payload: e.target.value })}\n//             />\n//             <Autocomplete\n//                 disablePortal\n//                 id=\"combo-box-priority\"\n//                 options={priorityOptions}\n//                 sx={{ width: 300 }}\n//                 renderInput={(params) => <TextField {...params} label=\"Priority\" />}\n//                 value={state.priority}\n//                 onChange={(event, newValue) => dispatch({ type: 'SET_PRIORITY', payload: newValue })}\n//                 style={{ marginRight: '10px' }}\n//             />\n//             <Autocomplete\n//                 disablePortal\n//                 id=\"combo-box-status\"\n//                 options={statusOptions}\n//                 sx={{ width: 300 }}\n//                 renderInput={(params) => <TextField {...params} label=\"Status\" />}\n//                 value={state.status}\n//                 onChange={(event, newValue) => dispatch({ type: 'SET_STATUS', payload: newValue })}\n//                 style={{ marginRight: '10px' }}\n//             />\n//             <Button variant=\"outlined\" onClick={handleAddToList}>Add</Button>\n//         </Container>\n//     )\n// }\n//\n// export default AddToList;\n//\nvar _c;\n$RefreshReg$(_c, \"AddToList\");","map":{"version":3,"names":["React","useState","useRef","Container","TextField","Autocomplete","Button","jsxDEV","_jsxDEV","AddToList","addToList","_s","itemNameRef","priorityRef","statusRef","priorityOptions","statusOptions","handleAddToList","newItem","itemName","current","value","priority","status","maxWidth","style","textAlign","display","justifyContent","children","inputRef","id","name","label","variant","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","disablePortal","options","sx","width","renderInput","params","onChange","event","newValue","onClick","_c","$RefreshReg$"],"sources":["/home/hassanwaqar/Github/React-Tasks/src/pages/AddToList.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Container, TextField, Autocomplete, Button } from \"@mui/material\";\n\nfunction AddToList({ addToList }) {\n    const itemNameRef = useRef(null);\n    const priorityRef = useRef(null);\n    const statusRef = useRef(null);\n\n    const [priorityOptions] = useState([\"High\", \"Medium\", \"Low\"]);\n    const [statusOptions] = useState([\"Pending\", \"In Progress\", \"Complete\"]);\n\n    const handleAddToList = () => {\n        const newItem = {\n            itemName: itemNameRef.current.value,\n            priority: priorityRef.current,\n            status: statusRef.current\n        };\n        addToList(newItem);\n        // Clear input fields after adding item\n        itemNameRef.current.value = '';\n        priorityRef.current = null; // Reset the reference\n        statusRef.current = null; // Reset the reference\n    };\n\n    return (\n        <Container maxWidth=\"sm\" style={{ textAlign: \"center\", display: \"flex\", justifyContent: \"space-around\" }}>\n            <TextField\n                inputRef={itemNameRef}\n                id=\"itemName\"\n                name=\"itemName\"\n                label=\"Item Name\"\n                variant=\"outlined\"\n                style={{ marginRight: '10px' }}\n            />\n            <Autocomplete\n                disablePortal\n                id=\"combo-box-priority\"\n                options={priorityOptions}\n                sx={{ width: 300 }}\n                renderInput={(params) => <TextField {...params} label=\"Priority\" />}\n                onChange={(event, newValue) => { priorityRef.current = newValue; }}\n                style={{ marginRight: '10px' }}\n            />\n            <Autocomplete\n                disablePortal\n                id=\"combo-box-status\"\n                options={statusOptions}\n                sx={{ width: 300 }}\n                renderInput={(params) => <TextField {...params} label=\"Status\" />}\n                onChange={(event, newValue) => { statusRef.current = newValue; }}\n                style={{ marginRight: '10px' }}\n            />\n            <Button variant=\"outlined\" onClick={handleAddToList}>Add</Button>\n        </Container>\n    )\n}\n\nexport default AddToList;\n\n\n// import React, { useState, useRef, useReducer } from 'react';\n// import { Container, TextField, Autocomplete, Button } from \"@mui/material\";\n//\n// const initialState = {\n//     itemName: '',\n//     priority: null,\n//     status: null\n// };\n//\n// function reducer(state, action) {\n//     switch (action.type) {\n//         case 'SET_ITEM_NAME':\n//             return { ...state, itemName: action.payload };\n//         case 'SET_PRIORITY':\n//             return { ...state, priority: action.payload };\n//         case 'SET_STATUS':\n//             return { ...state, status: action.payload };\n//         case 'RESET':\n//             return initialState;\n//         default:\n//             return state;\n//     }\n// }\n//\n// function AddToList({ addToList }) {\n//     const [state, dispatch] = useReducer(reducer, initialState);\n//\n//     const itemNameRef = useRef(null);\n//     const priorityRef = useRef(null);\n//     const statusRef = useRef(null);\n//\n//     const priorityOptions = [\"High\", \"Medium\", \"Low\"];\n//     const statusOptions = [\"Pending\", \"In Progress\", \"Complete\"];\n//\n//     const handleAddToList = () => {\n//         const newItem = {\n//             itemName: itemNameRef.current.value,\n//             priority: state.priority,\n//             status: state.status\n//         };\n//         addToList(newItem);\n//         dispatch({ type: 'RESET' });\n//     };\n//\n//     return (\n//         <Container maxWidth=\"sm\" style={{ textAlign: \"center\", display: \"flex\", justifyContent: \"space-around\" }}>\n//             <TextField\n//                 inputRef={itemNameRef}\n//                 id=\"itemName\"\n//                 name=\"itemName\"\n//                 label=\"Item Name\"\n//                 variant=\"outlined\"\n//                 style={{ marginRight: '10px' }}\n//                 value={state.itemName}\n//                 onChange={(e) => dispatch({ type: 'SET_ITEM_NAME', payload: e.target.value })}\n//             />\n//             <Autocomplete\n//                 disablePortal\n//                 id=\"combo-box-priority\"\n//                 options={priorityOptions}\n//                 sx={{ width: 300 }}\n//                 renderInput={(params) => <TextField {...params} label=\"Priority\" />}\n//                 value={state.priority}\n//                 onChange={(event, newValue) => dispatch({ type: 'SET_PRIORITY', payload: newValue })}\n//                 style={{ marginRight: '10px' }}\n//             />\n//             <Autocomplete\n//                 disablePortal\n//                 id=\"combo-box-status\"\n//                 options={statusOptions}\n//                 sx={{ width: 300 }}\n//                 renderInput={(params) => <TextField {...params} label=\"Status\" />}\n//                 value={state.status}\n//                 onChange={(event, newValue) => dispatch({ type: 'SET_STATUS', payload: newValue })}\n//                 style={{ marginRight: '10px' }}\n//             />\n//             <Button variant=\"outlined\" onClick={handleAddToList}>Add</Button>\n//         </Container>\n//     )\n// }\n//\n// export default AddToList;\n//\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}