{"ast":null,"code":"var _jsxFileName = \"/home/hassanwaqar/Github/React-Tasks/src/pages/AddToList.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useRef } from 'react';\n// import { Container, TextField, Autocomplete, Button } from \"@mui/material\";\n//\n// function AddToList({ addToList }) {\n//     const itemNameRef = useRef(null);\n//     const priorityRef = useRef(null);\n//     const statusRef = useRef(null);\n//\n//     const [priorityOptions] = useState([\"High\", \"Medium\", \"Low\"]);\n//     const [statusOptions] = useState([\"Pending\", \"In Progress\", \"Complete\"]);\n//\n//     const handleAddToList = () => {\n//         const newItem = {\n//             itemName: itemNameRef.current.value,\n//             priority: priorityRef.current,\n//             status: statusRef.current\n//         };\n//         addToList(newItem);\n//         // Clear input fields after adding item\n//         itemNameRef.current.value = '';\n//         priorityRef.current = null; // Reset the reference\n//         statusRef.current = null; // Reset the reference\n//     };\n//\n//     return (\n//         <Container maxWidth=\"sm\" style={{ textAlign: \"center\", display: \"flex\", justifyContent: \"space-around\" }}>\n//             <TextField\n//                 inputRef={itemNameRef}\n//                 id=\"itemName\"\n//                 name=\"itemName\"\n//                 label=\"Item Name\"\n//                 variant=\"outlined\"\n//                 style={{ marginRight: '10px' }}\n//             />\n//             <Autocomplete\n//                 disablePortal\n//                 id=\"combo-box-priority\"\n//                 options={priorityOptions}\n//                 sx={{ width: 300 }}\n//                 renderInput={(params) => <TextField {...params} label=\"Priority\" />}\n//                 onChange={(event, newValue) => { priorityRef.current = newValue; }}\n//                 style={{ marginRight: '10px' }}\n//             />\n//             <Autocomplete\n//                 disablePortal\n//                 id=\"combo-box-status\"\n//                 options={statusOptions}\n//                 sx={{ width: 300 }}\n//                 renderInput={(params) => <TextField {...params} label=\"Status\" />}\n//                 onChange={(event, newValue) => { statusRef.current = newValue; }}\n//                 style={{ marginRight: '10px' }}\n//             />\n//             <Button variant=\"outlined\" onClick={handleAddToList}>Add</Button>\n//         </Container>\n//     )\n// }\n//\n// export default AddToList;\n\nimport React, { useState, useRef, useReducer } from 'react';\nimport { Container, TextField, Autocomplete, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  itemName: '',\n  priority: null,\n  status: null\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SET_ITEM_NAME':\n      return {\n        ...state,\n        itemName: action.payload\n      };\n    case 'SET_PRIORITY':\n      return {\n        ...state,\n        priority: action.payload\n      };\n    case 'SET_STATUS':\n      return {\n        ...state,\n        status: action.payload\n      };\n    case 'RESET':\n      return initialState;\n    default:\n      return state;\n  }\n}\nfunction AddToList({\n  addToList\n}) {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const itemNameRef = useRef(null);\n  const priorityRef = useRef(null);\n  const statusRef = useRef(null);\n  const priorityOptions = [\"High\", \"Medium\", \"Low\"];\n  const statusOptions = [\"Pending\", \"In Progress\", \"Complete\"];\n  const handleAddToList = () => {\n    const newItem = {\n      itemName: itemNameRef.current.value,\n      priority: state.priority,\n      status: state.status\n    };\n    addToList(newItem);\n    dispatch({\n      type: 'RESET'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    style: {\n      textAlign: \"center\",\n      display: \"flex\",\n      justifyContent: \"space-around\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      inputRef: itemNameRef,\n      id: \"itemName\",\n      name: \"itemName\",\n      label: \"Item Name\",\n      variant: \"outlined\",\n      style: {\n        marginRight: '10px'\n      },\n      value: state.itemName,\n      onChange: e => dispatch({\n        type: 'SET_ITEM_NAME',\n        payload: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      disablePortal: true,\n      id: \"combo-box-priority\",\n      options: priorityOptions,\n      sx: {\n        width: 300\n      },\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n        ...params,\n        label: \"Priority\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 42\n      }, this),\n      value: state.priority,\n      onChange: (event, newValue) => dispatch({\n        type: 'SET_PRIORITY',\n        payload: newValue\n      }),\n      style: {\n        marginRight: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      disablePortal: true,\n      id: \"combo-box-status\",\n      options: statusOptions,\n      sx: {\n        width: 300\n      },\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n        ...params,\n        label: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 42\n      }, this),\n      value: state.status,\n      onChange: (event, newValue) => dispatch({\n        type: 'SET_STATUS',\n        payload: newValue\n      }),\n      style: {\n        marginRight: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleAddToList,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n_s(AddToList, \"qmt6RuvpgenM7jg7z+rbQx34xzU=\");\n_c = AddToList;\nexport default AddToList;\nvar _c;\n$RefreshReg$(_c, \"AddToList\");","map":{"version":3,"names":["React","useState","useRef","useReducer","Container","TextField","Autocomplete","Button","jsxDEV","_jsxDEV","initialState","itemName","priority","status","reducer","state","action","type","payload","AddToList","addToList","_s","dispatch","itemNameRef","priorityRef","statusRef","priorityOptions","statusOptions","handleAddToList","newItem","current","value","maxWidth","style","textAlign","display","justifyContent","children","inputRef","id","name","label","variant","marginRight","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","disablePortal","options","sx","width","renderInput","params","event","newValue","onClick","_c","$RefreshReg$"],"sources":["/home/hassanwaqar/Github/React-Tasks/src/pages/AddToList.jsx"],"sourcesContent":["// import React, { useState, useRef } from 'react';\n// import { Container, TextField, Autocomplete, Button } from \"@mui/material\";\n//\n// function AddToList({ addToList }) {\n//     const itemNameRef = useRef(null);\n//     const priorityRef = useRef(null);\n//     const statusRef = useRef(null);\n//\n//     const [priorityOptions] = useState([\"High\", \"Medium\", \"Low\"]);\n//     const [statusOptions] = useState([\"Pending\", \"In Progress\", \"Complete\"]);\n//\n//     const handleAddToList = () => {\n//         const newItem = {\n//             itemName: itemNameRef.current.value,\n//             priority: priorityRef.current,\n//             status: statusRef.current\n//         };\n//         addToList(newItem);\n//         // Clear input fields after adding item\n//         itemNameRef.current.value = '';\n//         priorityRef.current = null; // Reset the reference\n//         statusRef.current = null; // Reset the reference\n//     };\n//\n//     return (\n//         <Container maxWidth=\"sm\" style={{ textAlign: \"center\", display: \"flex\", justifyContent: \"space-around\" }}>\n//             <TextField\n//                 inputRef={itemNameRef}\n//                 id=\"itemName\"\n//                 name=\"itemName\"\n//                 label=\"Item Name\"\n//                 variant=\"outlined\"\n//                 style={{ marginRight: '10px' }}\n//             />\n//             <Autocomplete\n//                 disablePortal\n//                 id=\"combo-box-priority\"\n//                 options={priorityOptions}\n//                 sx={{ width: 300 }}\n//                 renderInput={(params) => <TextField {...params} label=\"Priority\" />}\n//                 onChange={(event, newValue) => { priorityRef.current = newValue; }}\n//                 style={{ marginRight: '10px' }}\n//             />\n//             <Autocomplete\n//                 disablePortal\n//                 id=\"combo-box-status\"\n//                 options={statusOptions}\n//                 sx={{ width: 300 }}\n//                 renderInput={(params) => <TextField {...params} label=\"Status\" />}\n//                 onChange={(event, newValue) => { statusRef.current = newValue; }}\n//                 style={{ marginRight: '10px' }}\n//             />\n//             <Button variant=\"outlined\" onClick={handleAddToList}>Add</Button>\n//         </Container>\n//     )\n// }\n//\n// export default AddToList;\n\n\nimport React, { useState, useRef, useReducer } from 'react';\nimport { Container, TextField, Autocomplete, Button } from \"@mui/material\";\n\nconst initialState = {\n    itemName: '',\n    priority: null,\n    status: null\n};\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case 'SET_ITEM_NAME':\n            return { ...state, itemName: action.payload };\n        case 'SET_PRIORITY':\n            return { ...state, priority: action.payload };\n        case 'SET_STATUS':\n            return { ...state, status: action.payload };\n        case 'RESET':\n            return initialState;\n        default:\n            return state;\n    }\n}\n\nfunction AddToList({ addToList }) {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const itemNameRef = useRef(null);\n    const priorityRef = useRef(null);\n    const statusRef = useRef(null);\n\n    const priorityOptions = [\"High\", \"Medium\", \"Low\"];\n    const statusOptions = [\"Pending\", \"In Progress\", \"Complete\"];\n\n    const handleAddToList = () => {\n        const newItem = {\n            itemName: itemNameRef.current.value,\n            priority: state.priority,\n            status: state.status\n        };\n        addToList(newItem);\n        dispatch({ type: 'RESET' });\n    };\n\n    return (\n        <Container maxWidth=\"sm\" style={{ textAlign: \"center\", display: \"flex\", justifyContent: \"space-around\" }}>\n            <TextField\n                inputRef={itemNameRef}\n                id=\"itemName\"\n                name=\"itemName\"\n                label=\"Item Name\"\n                variant=\"outlined\"\n                style={{ marginRight: '10px' }}\n                value={state.itemName}\n                onChange={(e) => dispatch({ type: 'SET_ITEM_NAME', payload: e.target.value })}\n            />\n            <Autocomplete\n                disablePortal\n                id=\"combo-box-priority\"\n                options={priorityOptions}\n                sx={{ width: 300 }}\n                renderInput={(params) => <TextField {...params} label=\"Priority\" />}\n                value={state.priority}\n                onChange={(event, newValue) => dispatch({ type: 'SET_PRIORITY', payload: newValue })}\n                style={{ marginRight: '10px' }}\n            />\n            <Autocomplete\n                disablePortal\n                id=\"combo-box-status\"\n                options={statusOptions}\n                sx={{ width: 300 }}\n                renderInput={(params) => <TextField {...params} label=\"Status\" />}\n                value={state.status}\n                onChange={(event, newValue) => dispatch({ type: 'SET_STATUS', payload: newValue })}\n                style={{ marginRight: '10px' }}\n            />\n            <Button variant=\"outlined\" onClick={handleAddToList}>Add</Button>\n        </Container>\n    )\n}\n\nexport default AddToList;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}