{"ast":null,"code":"var _jsxFileName = \"/home/hassanwaqar/Github/React-Tasks/src/pages/TodoComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoComponent() {\n  _s();\n  // State to hold the todo item\n  const [todo, setTodo] = useState(null);\n\n  // Mimic componentDidMount\n  useEffect(() => {\n    console.log('Component mounted');\n    fetch('https://jsonplaceholder.typicode.com/todos/1').then(response => response.json()).then(todoData => {\n      console.log('Fetched todo:', todoData);\n      setTodo(todoData);\n    });\n    // Cleanup function for componentWillUnmount\n    return () => {\n      console.log('Component unmounted');\n    };\n  }, []);\n\n  // Mimic componentDidUpdate\n  useEffect(() => {\n    console.log('Component updated');\n    if (todo) {\n      console.log('Todo updated:', todo);\n    }\n  }, [todo]);\n\n  // // Mimic shouldComponentUpdate\n  // const memoizedTodo = useMemo(() => {\n  //     console.log('Memoized todo');\n  //     return todo;\n  // }, [todo]);\n\n  // Rendering\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setTodo({\n        \"userId\": 2,\n        \"id\": 2,\n        \"title\": \"Hello, My name is Hassan\",\n        \"completed\": true\n      }),\n      children: \"Click Me !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(TodoComponent, \"yhrZjOmf3HNCeODvDq3sS49Sn0c=\");\n_c = TodoComponent;\nexport default TodoComponent;\nvar _c;\n$RefreshReg$(_c, \"TodoComponent\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","jsxDEV","_jsxDEV","TodoComponent","_s","todo","setTodo","console","log","fetch","then","response","json","todoData","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/hassanwaqar/Github/React-Tasks/src/pages/TodoComponent.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\n\nfunction TodoComponent() {\n    // State to hold the todo item\n    const [todo, setTodo] = useState(null);\n\n    // Mimic componentDidMount\n    useEffect(() => {\n        console.log('Component mounted');\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\n            .then(response => response.json())\n            .then(todoData => {\n                console.log('Fetched todo:', todoData);\n                setTodo(todoData);\n            });\n        // Cleanup function for componentWillUnmount\n        return () => {\n            console.log('Component unmounted');\n        };\n    }, []);\n\n    // Mimic componentDidUpdate\n    useEffect(() => {\n        console.log('Component updated');\n        if (todo) {\n            console.log('Todo updated:', todo);\n        }\n    }, [todo]);\n\n    // // Mimic shouldComponentUpdate\n    // const memoizedTodo = useMemo(() => {\n    //     console.log('Memoized todo');\n    //     return todo;\n    // }, [todo]);\n\n    // Rendering\n    return (\n        <div>\n            <h1>Todo Component</h1>\n            {/*{memoizedTodo && (*/}\n            {/*    <div>*/}\n            {/*        <p>Title: {memoizedTodo.title}</p>*/}\n            {/*        <p>Completed: {memoizedTodo.completed ? 'Yes' : 'No'}</p>*/}\n            {/*    </div>*/}\n            {/*)}*/}\n            <button onClick={() => setTodo({\n                \"userId\": 2,\n                \"id\": 2,\n                \"title\": \"Hello, My name is Hassan\",\n                \"completed\": true\n            })}>Click Me !</button>\n        </div>\n    );\n}\n\nexport default TodoComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACZQ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChCC,KAAK,CAAC,8CAA8C,CAAC,CAChDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,QAAQ,IAAI;MACdN,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEK,QAAQ,CAAC;MACtCP,OAAO,CAACO,QAAQ,CAAC;IACrB,CAAC,CAAC;IACN;IACA,OAAO,MAAM;MACTN,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACtC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAT,SAAS,CAAC,MAAM;IACZQ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,IAAIH,IAAI,EAAE;MACNE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC;IACtC;EACJ,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;;EAEV;EACA;EACA;EACA;EACA;;EAEA;EACA,oBACIH,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAOvBhB,OAAA;MAAQiB,OAAO,EAAEA,CAAA,KAAMb,OAAO,CAAC;QAC3B,QAAQ,EAAE,CAAC;QACX,IAAI,EAAE,CAAC;QACP,OAAO,EAAE,0BAA0B;QACnC,WAAW,EAAE;MACjB,CAAC,CAAE;MAAAQ,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEd;AAACd,EAAA,CAnDQD,aAAa;AAAAiB,EAAA,GAAbjB,aAAa;AAqDtB,eAAeA,aAAa;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}