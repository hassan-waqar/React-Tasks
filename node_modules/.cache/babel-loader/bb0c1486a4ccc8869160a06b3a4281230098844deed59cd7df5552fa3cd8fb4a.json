{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://jsonplaceholder.typicode.com/posts'\n  }),\n  tagTypes: ['Todos'],\n  endpoints: builder => ({\n    getTodos: builder.query({\n      query: () => '/',\n      transformResponse: res => res.sort((a, b) => b.id - a.id),\n      providesTags: ['Todos']\n    }),\n    addTodo: builder.mutation({\n      query: todo => ({\n        url: '/todos',\n        method: 'POST',\n        body: todo\n      }),\n      invalidatesTags: ['Todos']\n    }),\n    updateTodo: builder.mutation({\n      query: todo => ({\n        url: `/todos/${todo.id}`,\n        method: 'PATCH',\n        body: todo\n      }),\n      invalidatesTags: ['Todos']\n    }),\n    deleteTodo: builder.mutation({\n      query: ({\n        id\n      }) => ({\n        url: `/todos/${id}`,\n        method: 'DELETE',\n        body: id\n      }),\n      invalidatesTags: ['Todos']\n    })\n  })\n});\nexport const {\n  useGetTodosQuery,\n  useAddTodoMutation,\n  useUpdateTodoMutation,\n  useDeleteTodoMutation\n} = apiSlice;","map":{"version":3,"names":["createApi","fetchBaseQuery","apiSlice","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getTodos","query","transformResponse","res","sort","a","b","id","providesTags","addTodo","mutation","todo","url","method","body","invalidatesTags","updateTodo","deleteTodo","useGetTodosQuery","useAddTodoMutation","useUpdateTodoMutation","useDeleteTodoMutation"],"sources":["/home/hassanwaqar/Github/React-Tasks/src/features/api/apiSlice.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const apiSlice = createApi({\n    reducerPath: 'api',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://jsonplaceholder.typicode.com/posts' }),\n    tagTypes: ['Todos'],\n    endpoints: (builder) => ({\n        getTodos: builder.query({\n            query: () => '/',\n            transformResponse: res => res.sort((a, b) => b.id - a.id),\n            providesTags: ['Todos']\n        }),\n        addTodo: builder.mutation({\n            query: (todo) => ({\n                url: '/todos',\n                method: 'POST',\n                body: todo\n            }),\n            invalidatesTags: ['Todos']\n        }),\n        updateTodo: builder.mutation({\n            query: (todo) => ({\n                url: `/todos/${todo.id}`,\n                method: 'PATCH',\n                body: todo\n            }),\n            invalidatesTags: ['Todos']\n        }),\n        deleteTodo: builder.mutation({\n            query: ({ id }) => ({\n                url: `/todos/${id}`,\n                method: 'DELETE',\n                body: id\n            }),\n            invalidatesTags: ['Todos']\n        }),\n    })\n})\n\nexport const {\n    useGetTodosQuery,\n    useAddTodoMutation,\n    useUpdateTodoMutation,\n    useDeleteTodoMutation\n} = apiSlice"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAAC;EAC9BG,WAAW,EAAE,KAAK;EAClBC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAA6C,CAAC,CAAC;EACpFC,QAAQ,EAAE,CAAC,OAAO,CAAC;EACnBC,SAAS,EAAGC,OAAO,KAAM;IACrBC,QAAQ,EAAED,OAAO,CAACE,KAAK,CAAC;MACpBA,KAAK,EAAEA,CAAA,KAAM,GAAG;MAChBC,iBAAiB,EAAEC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,EAAE,GAAGF,CAAC,CAACE,EAAE,CAAC;MACzDC,YAAY,EAAE,CAAC,OAAO;IAC1B,CAAC,CAAC;IACFC,OAAO,EAAEV,OAAO,CAACW,QAAQ,CAAC;MACtBT,KAAK,EAAGU,IAAI,KAAM;QACdC,GAAG,EAAE,QAAQ;QACbC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACV,CAAC,CAAC;MACFI,eAAe,EAAE,CAAC,OAAO;IAC7B,CAAC,CAAC;IACFC,UAAU,EAAEjB,OAAO,CAACW,QAAQ,CAAC;MACzBT,KAAK,EAAGU,IAAI,KAAM;QACdC,GAAG,EAAG,UAASD,IAAI,CAACJ,EAAG,EAAC;QACxBM,MAAM,EAAE,OAAO;QACfC,IAAI,EAAEH;MACV,CAAC,CAAC;MACFI,eAAe,EAAE,CAAC,OAAO;IAC7B,CAAC,CAAC;IACFE,UAAU,EAAElB,OAAO,CAACW,QAAQ,CAAC;MACzBT,KAAK,EAAEA,CAAC;QAAEM;MAAG,CAAC,MAAM;QAChBK,GAAG,EAAG,UAASL,EAAG,EAAC;QACnBM,MAAM,EAAE,QAAQ;QAChBC,IAAI,EAAEP;MACV,CAAC,CAAC;MACFQ,eAAe,EAAE,CAAC,OAAO;IAC7B,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAM;EACTG,gBAAgB;EAChBC,kBAAkB;EAClBC,qBAAqB;EACrBC;AACJ,CAAC,GAAG5B,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}