{"ast":null,"code":"var _jsxFileName = \"/home/hassanwaqar/Github/React-Tasks/src/components/Form.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { FieldErrors, useForm, useFieldArray } from \"react-hook-form\";\nimport { DevTool } from \"@hookform/devtools\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet renderCount = 0;\nexport const RHFYouTubeForm = () => {\n  _s();\n  var _errors$username, _errors$email, _errors$channel, _errors$address, _errors$address$line, _errors$address2, _errors$address2$line, _errors$age, _errors$dob;\n  const form = useForm({\n    defaultValues: async () => {\n      const response = await fetch(\"https://jsonplaceholder.typicode.com/users/1\");\n      const data = await response.json();\n      return {\n        username: \"Batman\",\n        email: data.email,\n        channel: \"\",\n        address: {\n          line1: \"\",\n          line2: \"\"\n        },\n        age: 0,\n        dob: new Date(),\n        phone: [{\n          number: \"\"\n        }]\n      };\n    },\n    mode: \"onTouched\"\n  });\n  const {\n    register,\n    control,\n    handleSubmit,\n    formState,\n    watch,\n    getValues,\n    setValue,\n    reset,\n    trigger\n  } = form;\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    name: \"phone\",\n    control\n  });\n  const {\n    errors,\n    isDirty,\n    touchedFields,\n    dirtyFields,\n    isValid,\n    isSubmitting,\n    isSubmitted,\n    isSubmitSuccessful,\n    submitCount\n  } = formState;\n  console.log({\n    errors,\n    isDirty,\n    touchedFields,\n    dirtyFields,\n    isValid\n  });\n  console.log({\n    isSubmitting,\n    isSubmitted,\n    isSubmitSuccessful,\n    submitCount\n  });\n  const onSubmit = data => {\n    console.log(\"Form submitted\", data);\n  };\n  const onError = errors => {\n    console.log(\"Form errors\", errors);\n  };\n  const onReset = () => {\n    reset();\n  };\n  const handleGetValues = () => {\n    console.log(\"Get values\", getValues(\"username\"));\n  };\n  const handleSetValue = () => {\n    setValue(\"username\", \"\", {\n      shouldValidate: true,\n      shouldDirty: true,\n      shouldTouch: true\n    });\n  };\n\n  // const watchUsername = watch(\"username\");\n  useEffect(() => {\n    const subscription = watch((value, {\n      name,\n      type\n    }) => console.log(value, name, type));\n    return () => subscription.unsubscribe();\n  }, [watch]);\n  useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset();\n    }\n  }, [isSubmitSuccessful, reset]);\n  renderCount++;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"YouTube Form (\", renderCount / 2, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit, onError),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          ...register(\"username\", {\n            required: {\n              value: true,\n              message: \"Username is required\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ...register(\"email\", {\n            pattern: {\n              value: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n              message: \"Invalid email format\"\n            },\n            validate: {\n              notAdmin: fieldValue => {\n                return fieldValue !== \"admin@example.com\" || \"Enter a different email address\";\n              },\n              notBlackListed: fieldValue => {\n                return !fieldValue.endsWith(\"baddomain.com\") || \"This domain is not supported\";\n              },\n              emailAvailable: async fieldValue => {\n                const response = await fetch(`https://jsonplaceholder.typicode.com/users?email=${fieldValue}`);\n                const data = await response.json();\n                return data.length === 0 || \"Email already exists\";\n              }\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"channel\",\n          children: \"Channel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"channel\",\n          ...register(\"channel\", {\n            required: {\n              value: true,\n              message: \"Channel is required\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: (_errors$channel = errors.channel) === null || _errors$channel === void 0 ? void 0 : _errors$channel.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address-line1\",\n          children: \"Address Line 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"address-line1\",\n          ...register(\"address.line1\", {\n            required: {\n              value: true,\n              message: \"Address is required\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: (_errors$address = errors.address) === null || _errors$address === void 0 ? void 0 : (_errors$address$line = _errors$address.line1) === null || _errors$address$line === void 0 ? void 0 : _errors$address$line.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address-line2\",\n          children: \"Address Line 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"address-line2\",\n          ...register(\"address.line2\", {\n            required: {\n              value: true,\n              message: \"Address is required\"\n            },\n            disabled: watch(\"address.line1\") === \"\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: (_errors$address2 = errors.address) === null || _errors$address2 === void 0 ? void 0 : (_errors$address2$line = _errors$address2.line2) === null || _errors$address2$line === void 0 ? void 0 : _errors$address2$line.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"age\",\n          ...register(\"age\", {\n            valueAsNumber: true,\n            required: {\n              value: true,\n              message: \"Age is required\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: (_errors$age = errors.age) === null || _errors$age === void 0 ? void 0 : _errors$age.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dob\",\n          children: \"Date of Birth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"dob\",\n          ...register(\"dob\", {\n            valueAsDate: true,\n            required: {\n              value: true,\n              message: \"Date of Birth is required\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: (_errors$dob = errors.dob) === null || _errors$dob === void 0 ? void 0 : _errors$dob.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"List of phone numbers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [fields.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ...register(`phone.${index}.number`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 33\n            }, this), index > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => remove(index),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 37\n            }, this)]\n          }, field.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => append({\n              number: \"\"\n            }),\n            children: \"Add phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleGetValues,\n        children: \"Get values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSetValue,\n        children: \"Set value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => trigger(\"channel\"),\n        children: \"Validate channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !isDirty || !isValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DevTool, {\n      control: control\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(RHFYouTubeForm, \"EXI2tNFEC2YUTth5GW64F6uGCUM=\", false, function () {\n  return [useForm, useFieldArray];\n});\n_c = RHFYouTubeForm;\nvar _c;\n$RefreshReg$(_c, \"RHFYouTubeForm\");","map":{"version":3,"names":["useEffect","FieldErrors","useForm","useFieldArray","DevTool","jsxDEV","_jsxDEV","renderCount","RHFYouTubeForm","_s","_errors$username","_errors$email","_errors$channel","_errors$address","_errors$address$line","_errors$address2","_errors$address2$line","_errors$age","_errors$dob","form","defaultValues","response","fetch","data","json","username","email","channel","address","line1","line2","age","dob","Date","phone","number","mode","register","control","handleSubmit","formState","watch","getValues","setValue","reset","trigger","fields","append","remove","name","errors","isDirty","touchedFields","dirtyFields","isValid","isSubmitting","isSubmitted","isSubmitSuccessful","submitCount","console","log","onSubmit","onError","onReset","handleGetValues","handleSetValue","shouldValidate","shouldDirty","shouldTouch","subscription","value","type","unsubscribe","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","id","required","message","pattern","validate","notAdmin","fieldValue","notBlackListed","endsWith","emailAvailable","length","disabled","valueAsNumber","valueAsDate","map","field","index","onClick","_c","$RefreshReg$"],"sources":["/home/hassanwaqar/Github/React-Tasks/src/components/Form.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { FieldErrors, useForm, useFieldArray } from \"react-hook-form\";\nimport { DevTool } from \"@hookform/devtools\";\n\nlet renderCount = 0;\n\nexport const RHFYouTubeForm = () => {\n    const form = useForm({\n        defaultValues: async () => {\n            const response = await fetch(\n                \"https://jsonplaceholder.typicode.com/users/1\"\n            );\n            const data = await response.json();\n            return {\n                username: \"Batman\",\n                email: data.email,\n                channel: \"\",\n                address: {\n                    line1: \"\",\n                    line2: \"\",\n                },\n                age: 0,\n                dob: new Date(),\n                phone: [{ number: \"\" }],\n            };\n        },\n        mode: \"onTouched\",\n    });\n\n    const {\n        register,\n        control,\n        handleSubmit,\n        formState,\n        watch,\n        getValues,\n        setValue,\n        reset,\n        trigger,\n    } = form;\n\n    const { fields, append, remove } = useFieldArray({\n        name: \"phone\",\n        control,\n    });\n\n    const {\n        errors,\n        isDirty,\n        touchedFields,\n        dirtyFields,\n        isValid,\n        isSubmitting,\n        isSubmitted,\n        isSubmitSuccessful,\n        submitCount,\n    } = formState;\n\n    console.log({ errors, isDirty, touchedFields, dirtyFields, isValid });\n    console.log({ isSubmitting, isSubmitted, isSubmitSuccessful, submitCount });\n\n    const onSubmit = (data: FormValues) => {\n        console.log(\"Form submitted\", data);\n    };\n\n    const onError = (errors: FieldErrors<FormValues>) => {\n        console.log(\"Form errors\", errors);\n    };\n\n    const onReset = () => {\n        reset();\n    };\n\n    const handleGetValues = () => {\n        console.log(\"Get values\", getValues(\"username\"));\n    };\n\n    const handleSetValue = () => {\n        setValue(\"username\", \"\", {\n            shouldValidate: true,\n            shouldDirty: true,\n            shouldTouch: true,\n        });\n    };\n\n    // const watchUsername = watch(\"username\");\n    useEffect(() => {\n        const subscription = watch((value, { name, type }) =>\n            console.log(value, name, type)\n        );\n        return () => subscription.unsubscribe();\n    }, [watch]);\n\n    useEffect(() => {\n        if (isSubmitSuccessful) {\n            reset();\n        }\n    }, [isSubmitSuccessful, reset]);\n\n    renderCount++;\n    return (\n        <div>\n            <h1>YouTube Form ({renderCount / 2})</h1>\n\n            {/* <h2>Watched value: {watchUsername}</h2> */}\n            <form onSubmit={handleSubmit(onSubmit, onError)}>\n                <div className=\"form-control\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        {...register(\"username\", {\n                            required: { value: true, message: \"Username is required\" },\n                        })}\n                    />\n                    <p className=\"error\">{errors.username?.message}</p>\n                </div>\n\n                <div className=\"form-control\">\n                    <label htmlFor=\"email\">E-mail</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        {...register(\"email\", {\n                            pattern: {\n                                value:\n                                    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n                                message: \"Invalid email format\",\n                            },\n                            validate: {\n                                notAdmin: (fieldValue) => {\n                                    return (\n                                        fieldValue !== \"admin@example.com\" ||\n                                        \"Enter a different email address\"\n                                    );\n                                },\n                                notBlackListed: (fieldValue) => {\n                                    return (\n                                        !fieldValue.endsWith(\"baddomain.com\") ||\n                                        \"This domain is not supported\"\n                                    );\n                                },\n                                emailAvailable: async (fieldValue) => {\n                                    const response = await fetch(\n                                        `https://jsonplaceholder.typicode.com/users?email=${fieldValue}`\n                                    );\n                                    const data = await response.json();\n                                    return data.length === 0 || \"Email already exists\";\n                                },\n                            },\n                        })}\n                    />\n                    <p className=\"error\">{errors.email?.message}</p>\n                </div>\n\n                <div className=\"form-control\">\n                    <label htmlFor=\"channel\">Channel</label>\n                    <input\n                        type=\"text\"\n                        id=\"channel\"\n                        {...register(\"channel\", {\n                            required: { value: true, message: \"Channel is required\" },\n                        })}\n                    />\n                    <p className=\"error\">{errors.channel?.message}</p>\n                </div>\n\n                <div className=\"form-control\">\n                    <label htmlFor=\"address-line1\">Address Line 1</label>\n                    <input\n                        type=\"text\"\n                        id=\"address-line1\"\n                        {...register(\"address.line1\", {\n                            required: { value: true, message: \"Address is required\" },\n                        })}\n                    />\n                    <p className=\"error\">{errors.address?.line1?.message}</p>\n                </div>\n\n                <div className=\"form-control\">\n                    <label htmlFor=\"address-line2\">Address Line 2</label>\n                    <input\n                        type=\"text\"\n                        id=\"address-line2\"\n                        {...register(\"address.line2\", {\n                            required: { value: true, message: \"Address is required\" },\n                            disabled: watch(\"address.line1\") === \"\",\n                        })}\n                    />\n                    <p className=\"error\">{errors.address?.line2?.message}</p>\n                </div>\n\n                <div className=\"form-control\">\n                    <label htmlFor=\"age\">Age</label>\n                    <input\n                        type=\"number\"\n                        id=\"age\"\n                        {...register(\"age\", {\n                            valueAsNumber: true,\n                            required: { value: true, message: \"Age is required\" },\n                        })}\n                    />\n                    <p className=\"error\">{errors.age?.message}</p>\n                </div>\n\n                <div className=\"form-control\">\n                    <label htmlFor=\"dob\">Date of Birth</label>\n                    <input\n                        type=\"date\"\n                        id=\"dob\"\n                        {...register(\"dob\", {\n                            valueAsDate: true,\n                            required: { value: true, message: \"Date of Birth is required\" },\n                        })}\n                    />\n                    <p className=\"error\">{errors.dob?.message}</p>\n                </div>\n\n                <div>\n                    <label>List of phone numbers</label>\n                    <div>\n                        {fields.map((field, index) => (\n                            <div className=\"form-control\" key={field.id}>\n                                <input\n                                    type=\"text\"\n                                    {...register(`phone.${index}.number`)}\n                                />\n\n                                {index > 0 && (\n                                    <button type=\"button\" onClick={() => remove(index)}>\n                                        Remove\n                                    </button>\n                                )}\n                            </div>\n                        ))}\n                        <button\n                            type=\"button\"\n                            onClick={() =>\n                                append({\n                                    number: \"\",\n                                })\n                            }\n                        >\n                            Add phone number\n                        </button>\n                    </div>\n                </div>\n\n                <button type=\"button\" onClick={handleGetValues}>\n                    Get values\n                </button>\n                <button type=\"button\" onClick={handleSetValue}>\n                    Set value\n                </button>\n                <button type=\"button\" onClick={onReset}>\n                    Reset\n                </button>\n                <button type=\"button\" onClick={() => trigger(\"channel\")}>\n                    Validate channel\n                </button>\n                <button disabled={!isDirty || !isValid}>Submit</button>\n            </form>\n\n            <DevTool control={control} />\n        </div>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}