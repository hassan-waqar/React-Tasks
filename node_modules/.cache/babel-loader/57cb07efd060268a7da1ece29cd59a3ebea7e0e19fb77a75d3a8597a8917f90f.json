{"ast":null,"code":"var _jsxFileName = \"/home/hassanwaqar/Github/React-Tasks/src/components/Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { FieldArray, useForm } from \"react-hook-form\";\nimport { DevTool } from \"@hookform/devtools\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet renderCount = 0;\nexport default function Form() {\n  _s();\n  var _errors$username;\n  const {\n    register,\n    control,\n    handleSubmit,\n    formState: {\n      errors,\n      isDirty,\n      touchedFields,\n      isValid,\n      isSubmitSuccessful\n    },\n    watch,\n    setValue,\n    reset,\n    trigger\n  } = useForm({\n    defaultValues: async () => {\n      const response = await fetch(\"https://jsonplaceholder.typicode.com/users/1\");\n      const data = await response.json();\n      return {\n        username: \"Batman\",\n        email: data.email,\n        channel: \"\",\n        address: {\n          line1: \"\",\n          line2: \"\"\n        },\n        age: 0,\n        dob: new Date(),\n        phone: [{\n          number: \"\"\n        }]\n      };\n    },\n    mode: \"onTouched\"\n  });\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    name: \"phone\",\n    control\n  });\n  const onSubmit = data => {\n    console.log(\"Form submitted\", data);\n  };\n  const onError = errors => {\n    console.log(\"Form errors\", errors);\n  };\n  useEffect(() => {\n    const subscription = watch((value, {\n      name,\n      type\n    }) => console.log(value, name, type));\n    return () => subscription.unsubscribe();\n  }, [watch]);\n  useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset();\n    }\n  }, [isSubmitSuccessful, reset]);\n  renderCount++;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"YouTube Form (\", renderCount / 2, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit, onError),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          ...register(\"username\", {\n            required: {\n              value: true,\n              message: \"Username is required\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"List of phone numbers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [fields.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ...register(`phone.${index}.number`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), index > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => remove(index),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this)]\n          }, field.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => append({\n              number: \"\"\n            }),\n            children: \"Add phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DevTool, {\n      control: control\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"Er4EqU0O3L5mQrZ5HHu+sKkUues=\", true, function () {\n  return [useForm];\n});\n_c = Form;\n;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useEffect","FieldArray","useForm","DevTool","jsxDEV","_jsxDEV","renderCount","Form","_s","_errors$username","register","control","handleSubmit","formState","errors","isDirty","touchedFields","isValid","isSubmitSuccessful","watch","setValue","reset","trigger","defaultValues","response","fetch","data","json","username","email","channel","address","line1","line2","age","dob","Date","phone","number","mode","fields","append","remove","useFieldArray","name","onSubmit","console","log","onError","subscription","value","type","unsubscribe","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","id","required","message","map","field","index","onClick","onReset","_c","$RefreshReg$"],"sources":["/home/hassanwaqar/Github/React-Tasks/src/components/Form.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { FieldArray, useForm } from \"react-hook-form\";\nimport { DevTool } from \"@hookform/devtools\";\n\nlet renderCount = 0;\n\nexport default function Form() {\n    const {\n        register,\n        control,\n        handleSubmit,\n        formState: { errors, isDirty, touchedFields, isValid, isSubmitSuccessful },\n        watch,\n        setValue,\n        reset,\n        trigger\n    } = useForm({\n        defaultValues: async () => {\n            const response = await fetch(\n                \"https://jsonplaceholder.typicode.com/users/1\"\n            );\n            const data = await response.json();\n            return {\n                username: \"Batman\",\n                email: data.email,\n                channel: \"\",\n                address: {\n                    line1: \"\",\n                    line2: \"\"\n                },\n                age: 0,\n                dob: new Date(),\n                phone: [{ number: \"\" }]\n            };\n        },\n        mode: \"onTouched\"\n    });\n\n    const { fields, append, remove } = useFieldArray({\n        name: \"phone\",\n        control\n    });\n\n    const onSubmit = (data) => {\n        console.log(\"Form submitted\", data);\n    };\n\n    const onError = (errors) => {\n        console.log(\"Form errors\", errors);\n    };\n    \n    useEffect(() => {\n        const subscription = watch((value, { name, type }) =>\n            console.log(value, name, type)\n        );\n        return () => subscription.unsubscribe();\n    }, [watch]);\n\n    useEffect(() => {\n        if (isSubmitSuccessful) {\n            reset();\n        }\n    }, [isSubmitSuccessful, reset]);\n\n    renderCount++;\n    return (\n        <div>\n            <h1>YouTube Form ({renderCount / 2})</h1>\n            <form onSubmit={handleSubmit(onSubmit, onError)}>\n                <div className=\"form-control\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        {...register(\"username\", {\n                            required: { value: true, message: \"Username is required\" }\n                        })}\n                    />\n                    <p className=\"error\">{errors.username?.message}</p>\n                </div>\n\n                {/* Rest of the form controls */}\n\n                <div>\n                    <label>List of phone numbers</label>\n                    <div>\n                        {fields.map((field, index) => (\n                            <div className=\"form-control\" key={field.id}>\n                                <input\n                                    type=\"text\"\n                                    {...register(`phone.${index}.number`)}\n                                />\n\n                                {index > 0 && (\n                                    <button type=\"button\" onClick={() => remove(index)}>\n                                        Remove\n                                    </button>\n                                )}\n                            </div>\n                        ))}\n                        <button\n                            type=\"button\"\n                            onClick={() =>\n                                append({\n                                    number: \"\"\n                                })\n                            }\n                        >\n                            Add phone number\n                        </button>\n                    </div>\n                </div>\n\n                {/* Buttons for actions */}\n                <button type=\"submit\">Submit</button>\n                <button type=\"button\" onClick={onReset}>\n                    Reset\n                </button>\n\n            </form>\n            <DevTool control={control} />\n        </div>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}